一. 创建版本库
  初始化一个Git仓库，使用git init命令
  添加文件到Git仓库，分两步：
    1. 使用命令git add <file>，注意，可反复多次使用，添加多个文件；
    2. 使用命令git commit -m <message>，完成。

二. 时光机穿梭
  时光机穿梭 小结: 
	要随时掌握工作区的状态, 使用 git status 来查看
	如果 git status 告诉你有文件被修改过, 用 git diff 可以查看修改内容, 有对比的
  1. 版本回退
	1. HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id(版本号)。
  	2. 穿梭前，用 git log 可以查看提交历史 (如果嫌弃输出信息太多, 可以 git log --pretty=oneline 输出简介版本信息)，以便确定要                    回退到哪个版本。
  	3. 要重返未来，用 git reflog 查看命令历史，以便确定要回到未来的哪个版本。
  2. 撤销 
  	1. 如果当前你只是修改了, 还没 add 到暂缓区 那么 你就可以通过 git checkout -- 文件名 来撤销.(就是让这个文件回到最近一次	   git commit或git add时的状态。)
  	2. 如果你当前修改了 并且add 到暂缓区了, 分为两步,  
         		a. 可以用 git reset HEAD 文件名 撤销暂缓区 重新放入工作区
         		b.然后再利用 git checkout -- 文件名 回退到 最近一次 commit 或 add 时的状态

三. 远程仓库
  1. 添加远程仓库
	a. 要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

	b. 关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

	c. 此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

	分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联	网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！